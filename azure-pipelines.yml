# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

parameters:
  - name: allowedToFail
    type: boolean
    default: false
jobs:
- job: allowedToFail
  strategy:
    matrix:
      nightly:
        rustup_toolchain: nightly

  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install rust
    - script: cargo build --all
      displayName: Cargo build
    - script: cargo test --all
        exit.0
      displayName: Cargo test

- job: mustPass
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable
      beta:
        rustup_toolchain: beta

  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install rust
    - script: cargo build --all
      displayName: Cargo build
    - script: cargo test --all
      displayName: Cargo test

- job: oldVersions
  strategy:
    matrix:
      1.40:
        rustup_toolchain: 1.40

  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y rustup component add rustc --toolchain 1.40.0-x86_64-unknown-linux-gnu | sh -s -- -y rustup install $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install rust
    - script: cargo build --all
      displayName: Cargo build
    - script: cargo test --all
      displayName: Cargo test